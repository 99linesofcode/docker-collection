version: '3'

services:
  devcontainer:
    container_name: ${APP_NAME}.devcontainer
    build:
      context: ./docker/devcontainer
      dockerfile: Dockerfile
      args:
        - WWWUSER=${WWWUSER:-1000}
        - WWWGROUP=${WWWGROUP:-1000}
      ssh:
        - default
    working_dir: '/var/www/html'
    environment:
      - TZ=${TIMEZONE:-Europe/Amsterdam}
    tty: true
    volumes:
      - '/home/jordy/.npmrc:/root/.npmrc'
      - '/home/jordy/.config/composer/auth.json:/root/.config/composer/auth.json'
      - '.:/var/www/html'
    networks:
      hostnet: {}

  node:
    container_name: ${APP_NAME}.node
    image: 'node:${NODE_VERSION}'
    user: node
    working_dir: '/var/www/html/nuxt'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${FORWARD_NODE_PORT:-3000}:3000'
      - '${FORWARD_VITE_PORT:-24678}:24678'
    environment:
      - NODE_ENV=${APP_ENV}
      - NUXT_HOST=node
      - NUXT_PORT=${FORWARD_NODE_PORT:-3000}
    volumes:
      - '../nuxt:/var/www/html/nuxt'
    command: 'npm run dev'
    depends_on:
      - php

  php:
    container_name: ${APP_NAME}.php
    build:
      context: ./docker/php/8.1
      dockerfile: Dockerfile
    working_dir: '/var/www/html/api'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${APP_PORT:-80}:80'
    environment:
      WWWUSER: '${WWWUSER}'
      XDEBUG_MODE: '${PHP_XDEBUG_MODE:-off}'
      XDEBUG_CONFIG: '${PHP_XDEBUG_CONFIG:-client_host=host.docker.internal}'
    volumes:
      - '.:/var/www/html/api'
    command: '/usr/local/bin/php -d variables_order=EGPCS /var/www/html/api/artisan serve --host=0.0.0.0 --port=80'
    depends_on:
      # - mysql
      - postgresql
      - redis
      - meilisearch
      # - selenium

  postgresql:
    container_name: ${APP_NAME}.postgresql
    image: 'postgres:alpine'
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_DB: '${DB_DATABASE}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'vol.pgsql:/var/lib/pgsql'
      # - './vendor/laravel/sail/database/pqsql/create-testing-database.sql:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_PASSWORD}'"
        ]
      retries: 3
      timeout: 5s

  # mysql:
  #   container_name: ${APP_NAME}.mysql
  #   image: 'mysql/mysql-server:8.0'
  #   ports:
  #     - '${FORWARD_DB_PORT:-3306}:3306'
  #   environment:
  #     MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
  #     MYSQL_ROOT_HOST: '%'
  #     MYSQL_DATABASE: '${DB_DATABASE}'
  #     MYSQL_USER: '${DB_USERNAME}'
  #     MYSQL_PASSWORD: '${DB_PASSWORD}'
  #     MYSQL_ALLOW_EMPTY_PASSWORD: 1
  #   volumes:
  #     - 'vol.mysql:/var/lib/mysql'
  #     # - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
  #   healthcheck:
  #     test: [ 'CMD', 'mysqladmin', 'ping', '-p${DB_PASSWORD}' ]
  #     retries: 3
  #     timeout: 5s

  redis:
    container_name: ${APP_NAME}.redis
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'vol.redis:/data'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      retries: 3
      timeout: 5s

  meilisearch:
    container_name: ${APP_NAME}.meilisearch
    image: 'getmeili/meilisearch:v0.28.1'
    ports:
      - '${FORWARD_MEILISEARCH_PORT:-7700}:7700'
    volumes:
      - 'vol.meilisearch:/meili_data'
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--spider',
          'http://localhost:7700/health'
        ]
      retries: 3
      timeout: 5s

  mailhog:
    container_name: ${APP_NAME}.mailhog
    image: 'mailhog/mailhog:latest'
    ports:
      - '${FORWARD_MAILHOG_PORT:-1025}:1025'
      - '${FORWARD_MAILHOG_DASHBOARD_PORT:-8025}:8025'

  # selenium:
  #   container_name: ${APP_NAME}.selenium
  #   image: 'selenium/standalone-chrome'
  #   volumes:
  #     - '/dev/shm:/dev/shm'

  pgadmin:
    container_name: ${APP_NAME}.pgadmin
    image: dpage/pgadmin4:latest
    links:
      - postgresql
    environment:
      PGADMIN_DEFAULT_EMAIL: '${DB_USERNAME}@host.com'
      PGADMIN_DEFAULT_PASSWORD: '${DB_PASSWORD}'
    ports:
      - '${FORWARD_PGADMIN_PORT:-8888}:80'
  # phpmyadmin:
  #   container_name: ${APP_NAME}.phpmyadmin
  #   image: phpmyadmin:latest
  #   links:
  #     - mysql
  #   environment:
  #     MYSQL_USER: '${DB_USERNAME}'
  #     MYSQL_PASSWORD: '${DB_PASSWORD}'
  #     PMA_HOST: '${APP_NAME}.mysql'
  #     PMA_PMADB: 'pmadb'
  #     UPLOAD_LIMIT: 256M
  #   ports:
  #     - '${FORWARD_PHPMYADMIN_PORT:-8888}:80'

networks:
  default:
    name: '${APP_NAME}.net'
    driver: bridge
  hostnet:
    name: '${APP_NAME}.host'
    external: true

volumes:
  'vol.pgsql':
    name: '${APP_NAME}.vol.pgsql'
    driver: local
  # 'vol.mysql':
  #   name: '${APP_NAME}.vol.mysql'
  #   driver: local
  'vol.redis':
    name: '${APP_NAME}.vol.redis'
    driver: local
  'vol.meilisearch':
    name: '${APP_NAME}.vol.meilisearch'
    driver: local
