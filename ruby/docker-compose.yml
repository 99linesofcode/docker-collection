services:
  devcontainer:
    container_name: ${APP_NAME}.devcontainer
    build:
      context: ./devcontainer
      dockerfile: Dockerfile
      # See https://docs.docker.com/compose/compose-file/build/#ssh
      ssh:
        - default
      args:
        - PACKAGE_VERSION=latest
        - RUBY_VERSION=3.2.1
    working_dir: '/config/www'
    # See https://docs.docker.com/compose/environment-variables/envvars-precedence/
    environment:
      - TZ=${TIMEZONE:-Europe/Amsterdam}
    tty: true
    volumes:
      - '$HOME/.ssh:/config/.ssh'
      - '$HOME/.npmrc:/config/.npmrc'
      - '$HOME/.config/composer/auth.json:/config/.config/composer/auth.json'
      - '$HOME/Development/99linesofcode/${APP_NAME}:/config/www'

  ruby:
    container_name: ${APP_NAME}.ruby
    build:
      context: $HOME/Development/99linesofcode/${APP_NAME}
      dockerfile: $HOME/Development/99linesofcode/docker-base/ruby/ruby/Dockerfile
      args:
        - PACKAGE_VERSION=alpine
    working_dir: '/config/www'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    ports:
      - '${FORWARD_PHP_HTTP_PORT:-3000}:3000'
      - '${FORWARD_PHP_HTTPS_PORT:-3001}:3001'
    command: "bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - '$HOME/Development/99linesofcode/${APP_NAME}:/config/www'

  mysql:
    container_name: ${APP_NAME}.mysql
    image: mysql/mysql-server:8.0
    ports:
      - '${FORWARD_DB_PORT:-3306}:3306'
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - 'vol.mysql:/var/lib/mysql'
      # - '$HOME/dbdump.sql:/docker-entrypoint-initdb.d/dbdump.sql'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

  redis:
    container_name: ${APP_NAME}.redis
    image: redis:alpine
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'
    volumes:
      - 'vol.redis:/data'
    healthcheck:
      test: [ 'CMD', 'redis-cli', 'ping' ]
      retries: 3
      timeout: 5s

networks:
  default:
    name: '${APP_NAME}.net'
    driver: bridge

volumes:
  'vol.mysql':
    name: '${APP_NAME}.vol.mysql'
    driver: local
  'vol.redis':
    name: '${APP_NAME}.vol.redis'
    driver: local
